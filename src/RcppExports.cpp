// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// hello
SEXP hello();
RcppExport SEXP _hellorust_hello() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(hello());
    return rcpp_result_gen;
END_RCPP
}
// random_number
int32_t random_number();
RcppExport SEXP _hellorust_random_number() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(random_number());
    return rcpp_result_gen;
END_RCPP
}
// run_threads
void run_threads();
RcppExport SEXP _hellorust_run_threads() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    run_threads();
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hellorust_hello", (DL_FUNC) &_hellorust_hello, 0},
    {"_hellorust_random_number", (DL_FUNC) &_hellorust_random_number, 0},
    {"_hellorust_run_threads", (DL_FUNC) &_hellorust_run_threads, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_hellorust(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
