// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// hello_wrapper
SEXP hello_wrapper();
RcppExport SEXP _hellorust_hello_wrapper() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(hello_wrapper());
    return rcpp_result_gen;
END_RCPP
}
// random_wrapper
int32_t random_wrapper();
RcppExport SEXP _hellorust_random_wrapper() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(random_wrapper());
    return rcpp_result_gen;
END_RCPP
}
// threads_wapper
void threads_wapper();
RcppExport SEXP _hellorust_threads_wapper() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    threads_wapper();
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hellorust_hello_wrapper", (DL_FUNC) &_hellorust_hello_wrapper, 0},
    {"_hellorust_random_wrapper", (DL_FUNC) &_hellorust_random_wrapper, 0},
    {"_hellorust_threads_wapper", (DL_FUNC) &_hellorust_threads_wapper, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_hellorust(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
